   0  $accept : Prog $end

   1  Prog : Gdecl_sec MainBlock

   2  Gdecl_sec : DECL Gdecl_list ENDDECL

   3  Gdecl_list :
   4             | Gdecl Gdecl_list

   5  Gdecl : ret_type Glist ';'

   6  ret_type : T_INT
   7           | T_BOOL

   8  Glist : Gid
   9        | Gid ',' Glist
  10        | func ',' Glist

  11  Gid : VAR
  12      | Gid '[' NUM ']'

  13  func : VAR '(' arg_list ')'

  14  arg_list :
  15           | arg_list1

  16  arg_list1 : arg_list1 ';' arg
  17            | arg

  18  arg : arg_type var_list

  19  arg_type : T_INT

  20  var_list : VAR
  21           | VAR ',' var_list

  22  MainBlock : stmt_list
  23            | BEG stmt_list END

  24  stmt_list :
  25            | statement stmt_list
  26            | error ';'

  27  statement : assign_stmt ';'
  28            | write_stmt ';'
  29            | cond_stmt
  30            | control_stmt ';'
  31            | read_stmt ';'

  32  write_stmt : WRITE '(' param_list ')'
  33             | WRITE '(' '"' str_expr '"' ')'

  34  read_stmt : READ '(' param_list ')'

  35  assign_stmt :
  36              | expr '+' '+'
  37              | var_expr '=' expr

  38  cond_stmt : IF expr THEN stmt_list ENDIF
  39            | IF expr THEN stmt_list ELSE stmt_list ENDIF
  40            | FOR '(' assign_stmt ';' expr ';' assign_stmt ')' '{' stmt_list '}'

  41  control_stmt : BREAK_Y
  42               | CONTINUE

  43  param_list :
  44             | param_list1

  45  param_list1 : para
  46              | para ',' param_list1

  47  para : expr

  48  expr : NUM
  49       | T
  50       | F
  51       | '-' expr
  52       | var_expr
  53       | '(' expr ')'
  54       | expr '+' expr
  55       | expr '-' expr
  56       | expr '*' expr
  57       | expr '/' expr
  58       | expr '%' expr
  59       | expr '<' expr
  60       | expr '>' expr
  61       | expr GREATERTHANOREQUAL expr
  62       | expr LESSTHANOREQUAL expr
  63       | expr NOTEQUAL expr
  64       | expr EQUALEQUAL expr
  65       | LOGICAL_NOT expr
  66       | expr LOGICAL_AND expr
  67       | expr LOGICAL_OR expr

  68  str_expr : VAR
  69           | str_expr VAR

  70  var_expr : VAR
  71           | var_expr '[' expr ']'

state 0
	$accept : . Prog $end  (0)

	DECL  shift 1
	.  error

	Prog  goto 2
	Gdecl_sec  goto 3


state 1
	Gdecl_sec : DECL . Gdecl_list ENDDECL  (2)
	Gdecl_list : .  (3)

	T_INT  shift 4
	T_BOOL  shift 5
	ENDDECL  reduce 3

	Gdecl_list  goto 6
	Gdecl  goto 7
	ret_type  goto 8


state 2
	$accept : Prog . $end  (0)

	$end  accept


state 3
	Prog : Gdecl_sec . MainBlock  (1)
	stmt_list : .  (24)
	assign_stmt : .  (35)

	error  shift 9
	WRITE  shift 10
	READ  shift 11
	IF  shift 12
	LOGICAL_NOT  shift 13
	FOR  shift 14
	BREAK_Y  shift 15
	CONTINUE  shift 16
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	BEG  shift 21
	'-'  shift 22
	'('  shift 23
	$end  reduce 24
	';'  reduce 35

	expr  goto 24
	write_stmt  goto 25
	assign_stmt  goto 26
	var_expr  goto 27
	cond_stmt  goto 28
	stmt_list  goto 29
	statement  goto 30
	control_stmt  goto 31
	read_stmt  goto 32
	MainBlock  goto 33


state 4
	ret_type : T_INT .  (6)

	.  reduce 6


state 5
	ret_type : T_BOOL .  (7)

	.  reduce 7


state 6
	Gdecl_sec : DECL Gdecl_list . ENDDECL  (2)

	ENDDECL  shift 34
	.  error


state 7
	Gdecl_list : Gdecl . Gdecl_list  (4)
	Gdecl_list : .  (3)

	T_INT  shift 4
	T_BOOL  shift 5
	ENDDECL  reduce 3

	Gdecl_list  goto 35
	Gdecl  goto 7
	ret_type  goto 8


state 8
	Gdecl : ret_type . Glist ';'  (5)

	VAR  shift 36
	.  error

	Gid  goto 37
	Glist  goto 38
	func  goto 39


state 9
	stmt_list : error . ';'  (26)

	';'  shift 40
	.  error


state 10
	write_stmt : WRITE . '(' param_list ')'  (32)
	write_stmt : WRITE . '(' '"' str_expr '"' ')'  (33)

	'('  shift 41
	.  error


state 11
	read_stmt : READ . '(' param_list ')'  (34)

	'('  shift 42
	.  error


state 12
	cond_stmt : IF . expr THEN stmt_list ENDIF  (38)
	cond_stmt : IF . expr THEN stmt_list ELSE stmt_list ENDIF  (39)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 43
	var_expr  goto 44


state 13
	expr : LOGICAL_NOT . expr  (65)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 45
	var_expr  goto 44


state 14
	cond_stmt : FOR . '(' assign_stmt ';' expr ';' assign_stmt ')' '{' stmt_list '}'  (40)

	'('  shift 46
	.  error


state 15
	control_stmt : BREAK_Y .  (41)

	.  reduce 41


state 16
	control_stmt : CONTINUE .  (42)

	.  reduce 42


state 17
	var_expr : VAR .  (70)

	.  reduce 70


state 18
	expr : NUM .  (48)

	.  reduce 48


state 19
	expr : T .  (49)

	.  reduce 49


state 20
	expr : F .  (50)

	.  reduce 50


state 21
	MainBlock : BEG . stmt_list END  (23)
	stmt_list : .  (24)
	assign_stmt : .  (35)

	error  shift 9
	WRITE  shift 10
	READ  shift 11
	IF  shift 12
	LOGICAL_NOT  shift 13
	FOR  shift 14
	BREAK_Y  shift 15
	CONTINUE  shift 16
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	END  reduce 24
	';'  reduce 35

	expr  goto 24
	write_stmt  goto 25
	assign_stmt  goto 26
	var_expr  goto 27
	cond_stmt  goto 28
	stmt_list  goto 47
	statement  goto 30
	control_stmt  goto 31
	read_stmt  goto 32


state 22
	expr : '-' . expr  (51)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 48
	var_expr  goto 44


state 23
	expr : '(' . expr ')'  (53)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 49
	var_expr  goto 44


state 24
	assign_stmt : expr . '+' '+'  (36)
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	LOGICAL_AND  shift 50
	LOGICAL_OR  shift 51
	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	'<'  shift 56
	'>'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	.  error


state 25
	statement : write_stmt . ';'  (28)

	';'  shift 63
	.  error


state 26
	statement : assign_stmt . ';'  (27)

	';'  shift 64
	.  error


state 27
	assign_stmt : var_expr . '=' expr  (37)
	expr : var_expr .  (52)
	var_expr : var_expr . '[' expr ']'  (71)

	'='  shift 65
	'['  shift 66
	LOGICAL_AND  reduce 52
	LOGICAL_OR  reduce 52
	EQUALEQUAL  reduce 52
	LESSTHANOREQUAL  reduce 52
	GREATERTHANOREQUAL  reduce 52
	NOTEQUAL  reduce 52
	'<'  reduce 52
	'>'  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'*'  reduce 52
	'/'  reduce 52
	'%'  reduce 52


state 28
	statement : cond_stmt .  (29)

	.  reduce 29


state 29
	MainBlock : stmt_list .  (22)

	.  reduce 22


state 30
	stmt_list : statement . stmt_list  (25)
	stmt_list : .  (24)
	assign_stmt : .  (35)

	error  shift 9
	WRITE  shift 10
	READ  shift 11
	IF  shift 12
	LOGICAL_NOT  shift 13
	FOR  shift 14
	BREAK_Y  shift 15
	CONTINUE  shift 16
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	$end  reduce 24
	ELSE  reduce 24
	ENDIF  reduce 24
	END  reduce 24
	';'  reduce 35
	'}'  reduce 24

	expr  goto 24
	write_stmt  goto 25
	assign_stmt  goto 26
	var_expr  goto 27
	cond_stmt  goto 28
	stmt_list  goto 67
	statement  goto 30
	control_stmt  goto 31
	read_stmt  goto 32


state 31
	statement : control_stmt . ';'  (30)

	';'  shift 68
	.  error


state 32
	statement : read_stmt . ';'  (31)

	';'  shift 69
	.  error


state 33
	Prog : Gdecl_sec MainBlock .  (1)

	.  reduce 1


state 34
	Gdecl_sec : DECL Gdecl_list ENDDECL .  (2)

	.  reduce 2


state 35
	Gdecl_list : Gdecl Gdecl_list .  (4)

	.  reduce 4


state 36
	Gid : VAR .  (11)
	func : VAR . '(' arg_list ')'  (13)

	'('  shift 70
	';'  reduce 11
	','  reduce 11
	'['  reduce 11


state 37
	Glist : Gid .  (8)
	Glist : Gid . ',' Glist  (9)
	Gid : Gid . '[' NUM ']'  (12)

	','  shift 71
	'['  shift 72
	';'  reduce 8


state 38
	Gdecl : ret_type Glist . ';'  (5)

	';'  shift 73
	.  error


state 39
	Glist : func . ',' Glist  (10)

	','  shift 74
	.  error


state 40
	stmt_list : error ';' .  (26)

	.  reduce 26


state 41
	write_stmt : WRITE '(' . param_list ')'  (32)
	write_stmt : WRITE '(' . '"' str_expr '"' ')'  (33)
	param_list : .  (43)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	'"'  shift 75
	')'  reduce 43

	expr  goto 76
	var_expr  goto 44
	param_list1  goto 77
	param_list  goto 78
	para  goto 79


state 42
	read_stmt : READ '(' . param_list ')'  (34)
	param_list : .  (43)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	')'  reduce 43

	expr  goto 76
	var_expr  goto 44
	param_list1  goto 77
	param_list  goto 80
	para  goto 79


state 43
	cond_stmt : IF expr . THEN stmt_list ENDIF  (38)
	cond_stmt : IF expr . THEN stmt_list ELSE stmt_list ENDIF  (39)
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	LOGICAL_AND  shift 50
	LOGICAL_OR  shift 51
	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	THEN  shift 81
	'<'  shift 56
	'>'  shift 57
	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	.  error


state 44
	expr : var_expr .  (52)
	var_expr : var_expr . '[' expr ']'  (71)

	'['  shift 66
	LOGICAL_AND  reduce 52
	LOGICAL_OR  reduce 52
	EQUALEQUAL  reduce 52
	LESSTHANOREQUAL  reduce 52
	GREATERTHANOREQUAL  reduce 52
	NOTEQUAL  reduce 52
	THEN  reduce 52
	'<'  reduce 52
	'>'  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'*'  reduce 52
	'/'  reduce 52
	'%'  reduce 52
	';'  reduce 52
	','  reduce 52
	']'  reduce 52
	')'  reduce 52


state 45
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : LOGICAL_NOT expr .  (65)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	.  reduce 65


state 46
	cond_stmt : FOR '(' . assign_stmt ';' expr ';' assign_stmt ')' '{' stmt_list '}'  (40)
	assign_stmt : .  (35)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	';'  reduce 35

	expr  goto 24
	assign_stmt  goto 83
	var_expr  goto 27


state 47
	MainBlock : BEG stmt_list . END  (23)

	END  shift 84
	.  error


state 48
	expr : '-' expr .  (51)
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 51
	LOGICAL_OR  reduce 51
	EQUALEQUAL  reduce 51
	LESSTHANOREQUAL  reduce 51
	GREATERTHANOREQUAL  reduce 51
	NOTEQUAL  reduce 51
	THEN  reduce 51
	'<'  reduce 51
	'>'  reduce 51
	'+'  reduce 51
	'-'  reduce 51
	';'  reduce 51
	','  reduce 51
	']'  reduce 51
	')'  reduce 51


state 49
	expr : '(' expr . ')'  (53)
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	LOGICAL_AND  shift 50
	LOGICAL_OR  shift 51
	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	'<'  shift 56
	'>'  shift 57
	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	')'  shift 85
	.  error


state 50
	expr : expr LOGICAL_AND . expr  (66)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 86
	var_expr  goto 44


state 51
	expr : expr LOGICAL_OR . expr  (67)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 87
	var_expr  goto 44


state 52
	expr : expr EQUALEQUAL . expr  (64)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 88
	var_expr  goto 44


state 53
	expr : expr LESSTHANOREQUAL . expr  (62)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 89
	var_expr  goto 44


state 54
	expr : expr GREATERTHANOREQUAL . expr  (61)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 90
	var_expr  goto 44


state 55
	expr : expr NOTEQUAL . expr  (63)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 91
	var_expr  goto 44


state 56
	expr : expr '<' . expr  (59)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 92
	var_expr  goto 44


state 57
	expr : expr '>' . expr  (60)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 93
	var_expr  goto 44


state 58
	assign_stmt : expr '+' . '+'  (36)
	expr : expr '+' . expr  (54)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'+'  shift 94
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 95
	var_expr  goto 44


state 59
	expr : expr '-' . expr  (55)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 96
	var_expr  goto 44


state 60
	expr : expr '*' . expr  (56)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 97
	var_expr  goto 44


state 61
	expr : expr '/' . expr  (57)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 98
	var_expr  goto 44


state 62
	expr : expr '%' . expr  (58)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 99
	var_expr  goto 44


state 63
	statement : write_stmt ';' .  (28)

	.  reduce 28


state 64
	statement : assign_stmt ';' .  (27)

	.  reduce 27


state 65
	assign_stmt : var_expr '=' . expr  (37)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 100
	var_expr  goto 44


state 66
	var_expr : var_expr '[' . expr ']'  (71)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 101
	var_expr  goto 44


state 67
	stmt_list : statement stmt_list .  (25)

	.  reduce 25


state 68
	statement : control_stmt ';' .  (30)

	.  reduce 30


state 69
	statement : read_stmt ';' .  (31)

	.  reduce 31


state 70
	func : VAR '(' . arg_list ')'  (13)
	arg_list : .  (14)

	T_INT  shift 102
	')'  reduce 14

	arg_list  goto 103
	arg_list1  goto 104
	arg  goto 105
	arg_type  goto 106


state 71
	Glist : Gid ',' . Glist  (9)

	VAR  shift 36
	.  error

	Gid  goto 37
	Glist  goto 107
	func  goto 39


state 72
	Gid : Gid '[' . NUM ']'  (12)

	NUM  shift 108
	.  error


state 73
	Gdecl : ret_type Glist ';' .  (5)

	.  reduce 5


state 74
	Glist : func ',' . Glist  (10)

	VAR  shift 36
	.  error

	Gid  goto 37
	Glist  goto 109
	func  goto 39


state 75
	write_stmt : WRITE '(' '"' . str_expr '"' ')'  (33)

	VAR  shift 110
	.  error

	str_expr  goto 111


state 76
	para : expr .  (47)
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	LOGICAL_AND  shift 50
	LOGICAL_OR  shift 51
	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	'<'  shift 56
	'>'  shift 57
	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	','  reduce 47
	')'  reduce 47


state 77
	param_list : param_list1 .  (44)

	.  reduce 44


state 78
	write_stmt : WRITE '(' param_list . ')'  (32)

	')'  shift 112
	.  error


state 79
	param_list1 : para .  (45)
	param_list1 : para . ',' param_list1  (46)

	','  shift 113
	')'  reduce 45


state 80
	read_stmt : READ '(' param_list . ')'  (34)

	')'  shift 114
	.  error


state 81
	cond_stmt : IF expr THEN . stmt_list ENDIF  (38)
	cond_stmt : IF expr THEN . stmt_list ELSE stmt_list ENDIF  (39)
	stmt_list : .  (24)
	assign_stmt : .  (35)

	error  shift 9
	WRITE  shift 10
	READ  shift 11
	IF  shift 12
	LOGICAL_NOT  shift 13
	FOR  shift 14
	BREAK_Y  shift 15
	CONTINUE  shift 16
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	ELSE  reduce 24
	ENDIF  reduce 24
	';'  reduce 35

	expr  goto 24
	write_stmt  goto 25
	assign_stmt  goto 26
	var_expr  goto 27
	cond_stmt  goto 28
	stmt_list  goto 115
	statement  goto 30
	control_stmt  goto 31
	read_stmt  goto 32


state 82
	expr : expr '+' . expr  (54)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 95
	var_expr  goto 44


state 83
	cond_stmt : FOR '(' assign_stmt . ';' expr ';' assign_stmt ')' '{' stmt_list '}'  (40)

	';'  shift 116
	.  error


state 84
	MainBlock : BEG stmt_list END .  (23)

	.  reduce 23


state 85
	expr : '(' expr ')' .  (53)

	.  reduce 53


state 86
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr LOGICAL_AND expr .  (66)
	expr : expr . LOGICAL_OR expr  (67)

	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	'<'  shift 56
	'>'  shift 57
	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 66
	LOGICAL_OR  reduce 66
	THEN  reduce 66
	';'  reduce 66
	','  reduce 66
	']'  reduce 66
	')'  reduce 66


state 87
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)
	expr : expr LOGICAL_OR expr .  (67)

	LOGICAL_AND  shift 50
	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	'<'  shift 56
	'>'  shift 57
	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_OR  reduce 67
	THEN  reduce 67
	';'  reduce 67
	','  reduce 67
	']'  reduce 67
	')'  reduce 67


state 88
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr EQUALEQUAL expr .  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 64
	LOGICAL_OR  reduce 64
	EQUALEQUAL  reduce 64
	LESSTHANOREQUAL  reduce 64
	GREATERTHANOREQUAL  reduce 64
	NOTEQUAL  reduce 64
	THEN  reduce 64
	'<'  reduce 64
	'>'  reduce 64
	';'  reduce 64
	','  reduce 64
	']'  reduce 64
	')'  reduce 64


state 89
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr LESSTHANOREQUAL expr .  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 62
	LOGICAL_OR  reduce 62
	EQUALEQUAL  reduce 62
	LESSTHANOREQUAL  reduce 62
	GREATERTHANOREQUAL  reduce 62
	NOTEQUAL  reduce 62
	THEN  reduce 62
	'<'  reduce 62
	'>'  reduce 62
	';'  reduce 62
	','  reduce 62
	']'  reduce 62
	')'  reduce 62


state 90
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr GREATERTHANOREQUAL expr .  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 61
	LOGICAL_OR  reduce 61
	EQUALEQUAL  reduce 61
	LESSTHANOREQUAL  reduce 61
	GREATERTHANOREQUAL  reduce 61
	NOTEQUAL  reduce 61
	THEN  reduce 61
	'<'  reduce 61
	'>'  reduce 61
	';'  reduce 61
	','  reduce 61
	']'  reduce 61
	')'  reduce 61


state 91
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr NOTEQUAL expr .  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 63
	LOGICAL_OR  reduce 63
	EQUALEQUAL  reduce 63
	LESSTHANOREQUAL  reduce 63
	GREATERTHANOREQUAL  reduce 63
	NOTEQUAL  reduce 63
	THEN  reduce 63
	'<'  reduce 63
	'>'  reduce 63
	';'  reduce 63
	','  reduce 63
	']'  reduce 63
	')'  reduce 63


state 92
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr '<' expr .  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 59
	LOGICAL_OR  reduce 59
	EQUALEQUAL  reduce 59
	LESSTHANOREQUAL  reduce 59
	GREATERTHANOREQUAL  reduce 59
	NOTEQUAL  reduce 59
	THEN  reduce 59
	'<'  reduce 59
	'>'  reduce 59
	';'  reduce 59
	','  reduce 59
	']'  reduce 59
	')'  reduce 59


state 93
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr '>' expr .  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 60
	LOGICAL_OR  reduce 60
	EQUALEQUAL  reduce 60
	LESSTHANOREQUAL  reduce 60
	GREATERTHANOREQUAL  reduce 60
	NOTEQUAL  reduce 60
	THEN  reduce 60
	'<'  reduce 60
	'>'  reduce 60
	';'  reduce 60
	','  reduce 60
	']'  reduce 60
	')'  reduce 60


state 94
	assign_stmt : expr '+' '+' .  (36)

	.  reduce 36


state 95
	expr : expr . '+' expr  (54)
	expr : expr '+' expr .  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 54
	LOGICAL_OR  reduce 54
	EQUALEQUAL  reduce 54
	LESSTHANOREQUAL  reduce 54
	GREATERTHANOREQUAL  reduce 54
	NOTEQUAL  reduce 54
	THEN  reduce 54
	'<'  reduce 54
	'>'  reduce 54
	'+'  reduce 54
	'-'  reduce 54
	';'  reduce 54
	','  reduce 54
	']'  reduce 54
	')'  reduce 54


state 96
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr '-' expr .  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	LOGICAL_AND  reduce 55
	LOGICAL_OR  reduce 55
	EQUALEQUAL  reduce 55
	LESSTHANOREQUAL  reduce 55
	GREATERTHANOREQUAL  reduce 55
	NOTEQUAL  reduce 55
	THEN  reduce 55
	'<'  reduce 55
	'>'  reduce 55
	'+'  reduce 55
	'-'  reduce 55
	';'  reduce 55
	','  reduce 55
	']'  reduce 55
	')'  reduce 55


state 97
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr '*' expr .  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	.  reduce 56


state 98
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr '/' expr .  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	.  reduce 57


state 99
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr '%' expr .  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	.  reduce 58


state 100
	assign_stmt : var_expr '=' expr .  (37)
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	LOGICAL_AND  shift 50
	LOGICAL_OR  shift 51
	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	'<'  shift 56
	'>'  shift 57
	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	';'  reduce 37
	')'  reduce 37


state 101
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)
	var_expr : var_expr '[' expr . ']'  (71)

	LOGICAL_AND  shift 50
	LOGICAL_OR  shift 51
	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	'<'  shift 56
	'>'  shift 57
	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	']'  shift 117
	.  error


state 102
	arg_type : T_INT .  (19)

	.  reduce 19


state 103
	func : VAR '(' arg_list . ')'  (13)

	')'  shift 118
	.  error


state 104
	arg_list : arg_list1 .  (15)
	arg_list1 : arg_list1 . ';' arg  (16)

	';'  shift 119
	')'  reduce 15


state 105
	arg_list1 : arg .  (17)

	.  reduce 17


state 106
	arg : arg_type . var_list  (18)

	VAR  shift 120
	.  error

	var_list  goto 121


state 107
	Glist : Gid ',' Glist .  (9)

	.  reduce 9


state 108
	Gid : Gid '[' NUM . ']'  (12)

	']'  shift 122
	.  error


state 109
	Glist : func ',' Glist .  (10)

	.  reduce 10


state 110
	str_expr : VAR .  (68)

	.  reduce 68


state 111
	write_stmt : WRITE '(' '"' str_expr . '"' ')'  (33)
	str_expr : str_expr . VAR  (69)

	VAR  shift 123
	'"'  shift 124
	.  error


state 112
	write_stmt : WRITE '(' param_list ')' .  (32)

	.  reduce 32


state 113
	param_list1 : para ',' . param_list1  (46)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 76
	var_expr  goto 44
	param_list1  goto 125
	para  goto 79


state 114
	read_stmt : READ '(' param_list ')' .  (34)

	.  reduce 34


state 115
	cond_stmt : IF expr THEN stmt_list . ENDIF  (38)
	cond_stmt : IF expr THEN stmt_list . ELSE stmt_list ENDIF  (39)

	ELSE  shift 126
	ENDIF  shift 127
	.  error


state 116
	cond_stmt : FOR '(' assign_stmt ';' . expr ';' assign_stmt ')' '{' stmt_list '}'  (40)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	.  error

	expr  goto 128
	var_expr  goto 44


state 117
	var_expr : var_expr '[' expr ']' .  (71)

	.  reduce 71


state 118
	func : VAR '(' arg_list ')' .  (13)

	.  reduce 13


state 119
	arg_list1 : arg_list1 ';' . arg  (16)

	T_INT  shift 102
	.  error

	arg  goto 129
	arg_type  goto 106


state 120
	var_list : VAR .  (20)
	var_list : VAR . ',' var_list  (21)

	','  shift 130
	';'  reduce 20
	')'  reduce 20


state 121
	arg : arg_type var_list .  (18)

	.  reduce 18


state 122
	Gid : Gid '[' NUM ']' .  (12)

	.  reduce 12


state 123
	str_expr : str_expr VAR .  (69)

	.  reduce 69


state 124
	write_stmt : WRITE '(' '"' str_expr '"' . ')'  (33)

	')'  shift 131
	.  error


state 125
	param_list1 : para ',' param_list1 .  (46)

	.  reduce 46


state 126
	cond_stmt : IF expr THEN stmt_list ELSE . stmt_list ENDIF  (39)
	stmt_list : .  (24)
	assign_stmt : .  (35)

	error  shift 9
	WRITE  shift 10
	READ  shift 11
	IF  shift 12
	LOGICAL_NOT  shift 13
	FOR  shift 14
	BREAK_Y  shift 15
	CONTINUE  shift 16
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	ENDIF  reduce 24
	';'  reduce 35

	expr  goto 24
	write_stmt  goto 25
	assign_stmt  goto 26
	var_expr  goto 27
	cond_stmt  goto 28
	stmt_list  goto 132
	statement  goto 30
	control_stmt  goto 31
	read_stmt  goto 32


state 127
	cond_stmt : IF expr THEN stmt_list ENDIF .  (38)

	.  reduce 38


state 128
	cond_stmt : FOR '(' assign_stmt ';' expr . ';' assign_stmt ')' '{' stmt_list '}'  (40)
	expr : expr . '+' expr  (54)
	expr : expr . '-' expr  (55)
	expr : expr . '*' expr  (56)
	expr : expr . '/' expr  (57)
	expr : expr . '%' expr  (58)
	expr : expr . '<' expr  (59)
	expr : expr . '>' expr  (60)
	expr : expr . GREATERTHANOREQUAL expr  (61)
	expr : expr . LESSTHANOREQUAL expr  (62)
	expr : expr . NOTEQUAL expr  (63)
	expr : expr . EQUALEQUAL expr  (64)
	expr : expr . LOGICAL_AND expr  (66)
	expr : expr . LOGICAL_OR expr  (67)

	LOGICAL_AND  shift 50
	LOGICAL_OR  shift 51
	EQUALEQUAL  shift 52
	LESSTHANOREQUAL  shift 53
	GREATERTHANOREQUAL  shift 54
	NOTEQUAL  shift 55
	'<'  shift 56
	'>'  shift 57
	'+'  shift 82
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	';'  shift 133
	.  error


state 129
	arg_list1 : arg_list1 ';' arg .  (16)

	.  reduce 16


state 130
	var_list : VAR ',' . var_list  (21)

	VAR  shift 120
	.  error

	var_list  goto 134


state 131
	write_stmt : WRITE '(' '"' str_expr '"' ')' .  (33)

	.  reduce 33


state 132
	cond_stmt : IF expr THEN stmt_list ELSE stmt_list . ENDIF  (39)

	ENDIF  shift 135
	.  error


state 133
	cond_stmt : FOR '(' assign_stmt ';' expr ';' . assign_stmt ')' '{' stmt_list '}'  (40)
	assign_stmt : .  (35)

	LOGICAL_NOT  shift 13
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	')'  reduce 35

	expr  goto 24
	assign_stmt  goto 136
	var_expr  goto 27


state 134
	var_list : VAR ',' var_list .  (21)

	.  reduce 21


state 135
	cond_stmt : IF expr THEN stmt_list ELSE stmt_list ENDIF .  (39)

	.  reduce 39


state 136
	cond_stmt : FOR '(' assign_stmt ';' expr ';' assign_stmt . ')' '{' stmt_list '}'  (40)

	')'  shift 137
	.  error


state 137
	cond_stmt : FOR '(' assign_stmt ';' expr ';' assign_stmt ')' . '{' stmt_list '}'  (40)

	'{'  shift 138
	.  error


state 138
	cond_stmt : FOR '(' assign_stmt ';' expr ';' assign_stmt ')' '{' . stmt_list '}'  (40)
	stmt_list : .  (24)
	assign_stmt : .  (35)

	error  shift 9
	WRITE  shift 10
	READ  shift 11
	IF  shift 12
	LOGICAL_NOT  shift 13
	FOR  shift 14
	BREAK_Y  shift 15
	CONTINUE  shift 16
	VAR  shift 17
	NUM  shift 18
	T  shift 19
	F  shift 20
	'-'  shift 22
	'('  shift 23
	';'  reduce 35
	'}'  reduce 24

	expr  goto 24
	write_stmt  goto 25
	assign_stmt  goto 26
	var_expr  goto 27
	cond_stmt  goto 28
	stmt_list  goto 139
	statement  goto 30
	control_stmt  goto 31
	read_stmt  goto 32


state 139
	cond_stmt : FOR '(' assign_stmt ';' expr ';' assign_stmt ')' '{' stmt_list . '}'  (40)

	'}'  shift 140
	.  error


state 140
	cond_stmt : FOR '(' assign_stmt ';' expr ';' assign_stmt ')' '{' stmt_list '}' .  (40)

	.  reduce 40


45 terminals, 28 nonterminals
72 grammar rules, 141 states

grammar parser grammar
symbol# value# symbol
     0      0  $end
     1    256  error
     2    257  WRITE
     3    258  DECL
     4    259  ENDDECL
     5    260  T_INT
     6    261  T_BOOL
     7    262  READ
     8    263  IF
     9    264  ELSE
    10    265  LOGICAL_AND
    11    266  LOGICAL_NOT
    12    267  LOGICAL_OR
    13    268  EQUALEQUAL
    14    269  LESSTHANOREQUAL
    15    270  GREATERTHANOREQUAL
    16    271  NOTEQUAL
    17    272  FOR
    18    273  BREAK_Y
    19    274  CONTINUE
    20    275  VAR
    21    276  NUM
    22    277  T
    23    278  F
    24    279  THEN
    25    280  ENDIF
    26    281  BEG
    27    282  END
    28     61  '='
    29     60  '<'
    30     62  '>'
    31     43  '+'
    32     45  '-'
    33     42  '*'
    34     47  '/'
    35     37  '%'
    36     59  ';'
    37     44  ','
    38     91  '['
    39     93  ']'
    40     40  '('
    41     41  ')'
    42     34  '"'
    43    123  '{'
    44    125  '}'
    45    283  $accept
    46    284  Prog
    47    285  expr
    48    286  write_stmt
    49    287  assign_stmt
    50    288  Gdecl_list
    51    289  Gdecl
    52    290  ret_type
    53    291  Gid
    54    292  var_expr
    55    293  str_expr
    56    294  Glist
    57    295  cond_stmt
    58    296  stmt_list
    59    297  statement
    60    298  control_stmt
    61    299  param_list1
    62    300  param_list
    63    301  para
    64    302  read_stmt
    65    303  Gdecl_sec
    66    304  MainBlock
    67    305  func
    68    306  arg_list
    69    307  arg_list1
    70    308  arg
    71    309  arg_type
    72    310  var_list
